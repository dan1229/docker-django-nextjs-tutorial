version: '3'
services:
  # CLIENT
  client_app_name:
    # the 'app_name' is required if you want to use
    # this across multiple projects
    container_name: client_app_name
    restart: always
    build:
      context: ./client
      dockerfile: Dockerfile
    depends_on:
      - server_app_name
    volumes:  # folders to map from host:container
      - ./client:/client
      - /var/run/docker.sock:/var/run/docker.sock
      - node-modules:/client/node_modules
    ports:
      - "3000:3000"  # expose the port to other containers
    networks:
      - core  # virtual network name to connect to
    links:
      - server:server
    entrypoint: /client/entrypoint.sh  # similar to CMD


  # SERVER
  server_app_name:
    container_name: server_app_name
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file: ./server/.env
    depends_on:
      - db_app_name
    volumes:
      - ./server:/app/server
      - /var/run/docker.sock:/var/run/docker.sock
      - static:/app/server/static
      - static-debug:/app/server/static-debug
    ports:
      - "8000:8000"
    networks:
      - core
    links:
      - db_app_name:db_app_name
    entrypoint: /app/server/entrypoint.sh


  # Database
  db_app_name:
    container_name: db_app_name
    restart: always
    image: postgres:14-alpine  # Docker image - not Dockerfile
    environment:  # manually set environment variables
      - POSTGRES_DB=dans_backend
      - POSTGRES_USER=dans_backend
      - POSTGRES_PASSWORD=dans_backend
      - POSTGRES_HOST=db_dans_backend
    networks:
      - core
    ports:
      - "5432:5432"
    volumes:
      - ./server/dump.sql:/docker-entrypoint-initdb.d/dump.sql


  # PROXY SERVER
  nginx_app_name:
    container_name: nginx_app_name
    build:
      context: nginx/development
      dockerfile: Dockerfile
    volumes:
      - static:/app/server/static
      - static-debug:/app/server/static-debug
    ports:
      - "80:80"
    links:
      - server_app_name
      - client_app_name
    networks:
      - core


networks:  # declare networks
  core:

volumes:  # declare volumes
  node-modules:
  static:
  static-debug: